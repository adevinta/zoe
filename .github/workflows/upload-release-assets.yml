name: Publish release packages

on:
  release:
    types: ["published"]

jobs:

  publish-zoe-core-jar:
    name: Publish zoe core jar

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '100'

      - name: set upload url
        id: fetch_release_data
        run: |
          UPLOAD_URL=$(jq -r '.release.upload_url' ${GITHUB_EVENT_PATH})
          echo "::set-output name=upload_url::$UPLOAD_URL"

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 21
          java-package: jdk
          architecture: x64

      - name: Build
        id: build
        run: |
          zoe_jar_path=$(./dev/scripts/build-zoe-core-shadow-jar.sh)
          echo "::set-output name=zoe_jar_path::${zoe_jar_path}"
          echo "::set-output name=zoe_jar_name::$(basename ${zoe_jar_path})"

      - name: Upload zip package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.fetch_release_data.outputs.upload_url }}
          asset_path: ${{ steps.build.outputs.zoe_jar_path }}
          asset_name: ${{ steps.build.outputs.zoe_jar_name }}
          asset_content_type: application/zip

  release-assets-without-runtime:
    name: Publish packages without JDK

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '100'

      - name: set upload url
        id: fetch_release_data
        run: |
          UPLOAD_URL=$(jq -r '.release.upload_url' ${GITHUB_EVENT_PATH})
          echo "::set-output name=upload_url::$UPLOAD_URL"

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 21
          java-package: jdk
          architecture: x64

      - name: Package zip
        id: package_zip
        run: |
          package=$(./dev/scripts/build-zoe-cli-archive-without-runtime.sh zip)
          echo "::set-output name=package_path::${package}"
          echo "::set-output name=package_name::$(basename ${package})"

      - name: Package tar
        id: package_tar
        run: |
          package=$(./dev/scripts/build-zoe-cli-archive-without-runtime.sh tar)
          echo "::set-output name=package_path::${package}"
          echo "::set-output name=package_name::$(basename ${package})"

      - name: Upload zip package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.fetch_release_data.outputs.upload_url }}
          asset_path: ${{ steps.package_zip.outputs.package_path }}
          asset_name: ${{ steps.package_zip.outputs.package_name }}
          asset_content_type: application/zip

      - name: Upload tar package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.fetch_release_data.outputs.upload_url }}
          asset_path: ${{ steps.package_tar.outputs.package_path }}
          asset_name: ${{ steps.package_tar.outputs.package_name }}
          asset_content_type: application/zip

#  TODO: this needs to be tested on macos
#  release-assets-with-runtime:
#    name: Publish packages with runtime
#
#    strategy:
#      matrix:
#        runtime_os: [Linux, MacOs]
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: '100'
#
#      - name: set upload url
#        id: fetch_release_data
#        run: |
#          UPLOAD_URL=$(jq -r '.release.upload_url' ${GITHUB_EVENT_PATH})
#          echo "::set-output name=upload_url::$UPLOAD_URL"
#
#      - name: Setup Java JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#          java-package: jdk
#          architecture: x64
#
#      - name: Package zip
#        id: package_zip
#        env:
#          RUNTIME_OS: ${{ matrix.runtime_os }}
#        run: |
#          suffix="-with-runtime-$RUNTIME_OS"
#          package=$(./dev/scripts/build-zoe-cli-archive-with-runtime.sh zip "$RUNTIME_OS" "$suffix")
#          echo "::set-output name=package_path::${package}"
#          echo "::set-output name=package_name::$(basename ${package})"
#
#      - name: Upload zip package
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.fetch_release_data.outputs.upload_url }}
#          asset_path: ${{ steps.package_zip.outputs.package_path }}
#          asset_name: ${{ steps.package_zip.outputs.package_name }}
#          asset_content_type: application/zip

  release-installers-with-runtime:

    name: Publish installers with runtime

    strategy:
      matrix:
        package:
          - type: deb
            os: ubuntu-latest
          - type: rpm
            os: ubuntu-latest

    runs-on: ${{ matrix.package.os }}

    env:
      target: ${{ matrix.package.type }}

    steps:
      - uses: actions/checkout@v2

      - name: set upload url
        id: fetch_release_data
        run: |
          UPLOAD_URL=$(jq -r '.release.upload_url' ${GITHUB_EVENT_PATH})
          echo "::set-output name=upload_url::$UPLOAD_URL"

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 21
          java-package: jdk
          architecture: x64

      - name: Package
        id: package
        run: |
          package=$(./dev/scripts/build-zoe-cli-installer-with-runtime.sh ${target})
          echo "::set-output name=package_path::${package}"
          echo "::set-output name=package_name::$(basename ${package})"

      - name: Upload package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.fetch_release_data.outputs.upload_url }}
          asset_path: ${{ steps.package.outputs.package_path }}
          asset_name: ${{ steps.package.outputs.package_name }}
          asset_content_type: application/zip
